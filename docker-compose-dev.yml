version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile-dev
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"

  backend:
    env_file:
      - .env
    build:
      context: ./backend
      dockerfile: Dockerfile-dev
    environment:
      PYTHONUNBUFFERED: 1
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: challenges_db
      PASS_INITIALIZE_MONGO_SETUP: "False"
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - /app/__pycache__
    ports:
      - "5000:5000"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: challenges_db
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network
    restart: on-failure
    ports:
      - "27017:27017"

networks:
  app-network:

volumes:
  mongodb_data:
