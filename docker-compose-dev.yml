version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    env_file:
      - .env
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      PYTHONUNBUFFERED: 1
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: challenges_db
      PASS_INITIALIZE_MONGO_SETUP: "False"
    depends_on:
      mongodb: # `mongodb`というネームでサービスを指定できるようにする
        condition: service_healthy # `mongodb`サービスが正常に動作している場合のみ起動する
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "${NGINX_EXTERNAL_PORT}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: challenges_db
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network
    restart: on-failure
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

networks:
  app-network:

volumes:
  mongodb_data: